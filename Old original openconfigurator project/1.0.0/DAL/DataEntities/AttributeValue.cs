//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace DAL.DataEntities
{
    public partial class AttributeValue : IDataEntity
    {
        #region Primitive Properties
    
        public virtual int ID
        {
            get;
            set;
        }
    
        public virtual int FeatureSelectionID
        {
            get { return _featureSelectionID; }
            set
            {
                if (_featureSelectionID != value)
                {
                    if (FeatureSelection != null && FeatureSelection.ID != value)
                    {
                        FeatureSelection = null;
                    }
                    _featureSelectionID = value;
                }
            }
        }
        private int _featureSelectionID;
    
        public virtual int AttributeID
        {
            get { return _attributeID; }
            set
            {
                if (_attributeID != value)
                {
                    if (Attribute != null && Attribute.ID != value)
                    {
                        Attribute = null;
                    }
                    _attributeID = value;
                }
            }
        }
        private int _attributeID;
    
        public virtual string Value
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual FeatureSelection FeatureSelection
        {
            get { return _featureSelection; }
            set
            {
                if (!ReferenceEquals(_featureSelection, value))
                {
                    var previousValue = _featureSelection;
                    _featureSelection = value;
                    FixupFeatureSelection(previousValue);
                }
            }
        }
        private FeatureSelection _featureSelection;
    
        public virtual Attribute Attribute
        {
            get { return _attribute; }
            set
            {
                if (!ReferenceEquals(_attribute, value))
                {
                    var previousValue = _attribute;
                    _attribute = value;
                    FixupAttribute(previousValue);
                }
            }
        }
        private Attribute _attribute;

        #endregion
        #region Association Fixup
    
        private void FixupFeatureSelection(FeatureSelection previousValue)
        {
            if (previousValue != null && previousValue.AttributeValues.Contains(this))
            {
                previousValue.AttributeValues.Remove(this);
            }
    
            if (FeatureSelection != null)
            {
                if (!FeatureSelection.AttributeValues.Contains(this))
                {
                    FeatureSelection.AttributeValues.Add(this);
                }
                if (FeatureSelectionID != FeatureSelection.ID)
                {
                    FeatureSelectionID = FeatureSelection.ID;
                }
            }
        }
    
        private void FixupAttribute(Attribute previousValue)
        {
            if (previousValue != null && previousValue.AttributeValues.Contains(this))
            {
                previousValue.AttributeValues.Remove(this);
            }
    
            if (Attribute != null)
            {
                if (!Attribute.AttributeValues.Contains(this))
                {
                    Attribute.AttributeValues.Add(this);
                }
                if (AttributeID != Attribute.ID)
                {
                    AttributeID = Attribute.ID;
                }
            }
        }

        #endregion
    }
}
