//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace DAL.DataEntities
{
    public partial class GroupRelation_To_Feature : IDataEntity
    {
        #region Primitive Properties
    
        public virtual int ID
        {
            get;
            set;
        }
    
        public virtual int GroupRelationID
        {
            get { return _groupRelationID; }
            set
            {
                if (_groupRelationID != value)
                {
                    if (GroupRelation != null && GroupRelation.ID != value)
                    {
                        GroupRelation = null;
                    }
                    _groupRelationID = value;
                }
            }
        }
        private int _groupRelationID;
    
        public virtual int ParentFeatureID
        {
            get { return _parentFeatureID; }
            set
            {
                if (_parentFeatureID != value)
                {
                    if (ParentFeature != null && ParentFeature.ID != value)
                    {
                        ParentFeature = null;
                    }
                    _parentFeatureID = value;
                }
            }
        }
        private int _parentFeatureID;
    
        public virtual int ChildFeatureID
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual Feature ParentFeature
        {
            get { return _parentFeature; }
            set
            {
                if (!ReferenceEquals(_parentFeature, value))
                {
                    var previousValue = _parentFeature;
                    _parentFeature = value;
                    FixupParentFeature(previousValue);
                }
            }
        }
        private Feature _parentFeature;
    
        public virtual GroupRelation GroupRelation
        {
            get { return _groupRelation; }
            set
            {
                if (!ReferenceEquals(_groupRelation, value))
                {
                    var previousValue = _groupRelation;
                    _groupRelation = value;
                    FixupGroupRelation(previousValue);
                }
            }
        }
        private GroupRelation _groupRelation;

        #endregion
        #region Association Fixup
    
        private void FixupParentFeature(Feature previousValue)
        {
            if (previousValue != null && previousValue.GroupRelations_To_Features.Contains(this))
            {
                previousValue.GroupRelations_To_Features.Remove(this);
            }
    
            if (ParentFeature != null)
            {
                if (!ParentFeature.GroupRelations_To_Features.Contains(this))
                {
                    ParentFeature.GroupRelations_To_Features.Add(this);
                }
                if (ParentFeatureID != ParentFeature.ID)
                {
                    ParentFeatureID = ParentFeature.ID;
                }
            }
        }
    
        private void FixupGroupRelation(GroupRelation previousValue)
        {
            if (previousValue != null && previousValue.GroupRelations_To_Features.Contains(this))
            {
                previousValue.GroupRelations_To_Features.Remove(this);
            }
    
            if (GroupRelation != null)
            {
                if (!GroupRelation.GroupRelations_To_Features.Contains(this))
                {
                    GroupRelation.GroupRelations_To_Features.Add(this);
                }
                if (GroupRelationID != GroupRelation.ID)
                {
                    GroupRelationID = GroupRelation.ID;
                }
            }
        }

        #endregion
    }
}
