@{
    ViewBag.Title = "ModelEditor";
    Layout = "~/Views/Master/_LoggedInLayout.cshtml";
}
@section headerscripts{
    <script type="text/javascript" src="../../Scripts/Pages/ModelEditor.js"></script>
    <script type="text/javascript">
        //General functions~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        var modelId = '@(ViewBag.ModelId)';
        var diagramContext = null;
        var propertiesComponent = null;

        //
        function calcWidth() {
            //Set width for ModelsBox
            var containerWidth = $(".OuterContentArea .InnerContentArea").width();
            var marginWidth = 31;
            var toolboxBoxWidth = $("#ToolBox").width();
            var propertiesBoxWidth = $("#PropertiesBox").width();
            var modelsBoxWidth = containerWidth - marginWidth * 2 - toolboxBoxWidth - propertiesBoxWidth;
            $('#ModelDiagramBox').css("width", modelsBoxWidth + "px");
        }
        function saveData() {
            //Save ModelName
            var name = $("#ModelNameTextbox").val();
            $.ajax({
                type: "POST",
                url: "/ModelEditor/SaveModel",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify({ modelId: modelId, name: name }),
                success: function (reponse) {

                    $.pnotify({
                        pnotify_title: "Data saved",
                        pnotify_text: "Model '" + name + "' saved successfully !",
                        pnotify_type: "notice"
                    });

                },
                error: function (req, status, error) {
                    $.pnotify({
                        pnotify_title: "Error!",
                        pnotify_text: "Data could not be saved",
                        pnotify_type: "error"
                    });
                }
            });
        }

        //
        function getDefaultDataObj(type) {
            var returnObj;
            $.ajax({
                url: "/ModelEditor/NewDefault" + type,
                data: {},
                async: false,
                success: function (dataObj) {
                    returnObj = dataObj;
                }
            });
            return returnObj;
        }
        //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        //Load~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        $(document).ready(function () {
            //Event handlers-------------------------------------------------------------------
            $("#SaveButton").bind("click", function () {
                saveData();
            });
            $("#NewFeatureButton").bind("click", function () {
                var featureObj = getDefaultDataObj("Feature");
                diagramContext.AddFeature(featureObj);
            });
            $("#NewRelationButton").bind("click", function () {
                if (diagramContext.SelectedElements.length == 2) {
                    var relationObj = getDefaultDataObj("Relation");
                    diagramContext.AddRelation(diagramContext.SelectedElements[0], diagramContext.SelectedElements[1], relationObj);
                }
            });
            $("#NewGroupRelationButton").bind("click", function () {
                if (diagramContext.SelectedElements.length > 2) {
                    var groupRelationObj = null;
                    diagramContext.AddGroupRelation(diagramContext.SelectedElements[0], diagramContext.SelectedElements.slice(1), groupRelationObj);
                }
            });
            //---------------------------------------------------------------------------------

            //Initialize 
            calcWidth();
            calcWidth();
            $(window).resize(function () {
                calcWidth();
                calcWidth();
            });

            //Load data
            $("#ModelDiagramBox").block({ message: "Loading diagram...", fadeIn: 300 });
            $.timer(300, function () {

                //DiagramContext
                diagramContext = new DiagramContext($("#SVGCanvas")[0]);
                diagramContext.Initialize();

                //PropertiesComponent
                propertiesComponent = new PropertiesComponent($("#PropertiesBox"), diagramContext);

                //Event handlers
                diagramContext.OnElementSelected.AddHandler(new EventHandler(function (set) {
                    propertiesComponent.LoadProperties(set);
                }));
                diagramContext.OnElementDeselected.AddHandler(new EventHandler(function (set) {
                    propertiesComponent.Clear();
                }));
                diagramContext.OnAllElementsDeselected.AddHandler(new EventHandler(function () {
                    propertiesComponent.Clear();
                }));

                $("#ModelDiagramBox").unblock();
            });
        });
        //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    </script>
}
@section SubPageItem{
    <div class="MenuItemSeparator">
        ></div>
    <div id="ModelMenuBar">
        <input id="ModelNameTextbox" class="Textbox" type="text" value="@ViewBag.ModelName" />
        <div class="Button-Toolbar" id="SaveButton">
            <img src="../../Content/themes/base/images/Icons/save-toolbar.png" />
            <span>Save</span>
        </div>
        <div class="Button-Toolbar" id="UndoButton">
            <img src="../../Content/themes/base/images/Icons/undo-toolbar.png" />
            <span>Undo</span>
        </div>
        <div class="Button-Toolbar" id="RedoButton">
            <img src="../../Content/themes/base/images/Icons/redo-toolbar.png" />
            <span>Redo</span>
        </div>
    </div>
}
@*Toolbox*@
<div id="ToolBox" class="RoundedBox">
    <div class="BoxHeader">
        <div class="BoxInnerHeader">
            <span class="HeaderLabel">Actions</span>
        </div>
    </div>
    <div class="BoxContent">
        <ul class="ActionList">
            <li class="Button-Normal" id="NewFeatureButton">
                <img src="../../Content/themes/base/images/Icons/NewModel.png" />
                <span>New Feature</span> </li>
            <li class="Button-Normal" id="NewRelationButton">
                <img src="../../Content/themes/base/images/Icons/NewModel.png" />
                <span>New Relation</span> </li>
            <li class="Button-Normal" id="NewGroupRelationButton">
                <img src="../../Content/themes/base/images/Icons/NewModel.png" />
                <span>New Group Relation</span> </li>
        </ul>
    </div>
    <div class="BoxFooter">
        <div class="BoxInnerFooter">
        </div>
    </div>
</div>
@*Properties*@
<div id="PropertiesBox" class="RoundedBox">
    <div class="BoxHeader">
        <div class="BoxInnerHeader">
            <span class="HeaderLabel">Properties - <span id="SetTypeLabel"></span></span>
        </div>
    </div>
    <div class="BoxContent">
        <div id="MainContainer">
        </div>
    </div>
    <div class="BoxFooter">
        <div class="BoxInnerFooter">
        </div>
    </div>
</div>
@*ModelDiagram*@
<div id="ModelDiagramBox" class="RoundedBox">
    <div class="BoxHeader">
        <div class="BoxInnerHeader">
            <span class="HeaderLabel">Model Diagram</span>
        </div>
    </div>
    <div class="BoxContent">
        <div id="SVGCanvas">
        </div>
    </div>
    <div class="BoxFooter">
        <div class="BoxInnerFooter">
        </div>
    </div>
</div>
