//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace DAL.DataEntities
{
    public partial class Attribute : IDataEntity
    {
        #region Primitive Properties
    
        public virtual int ID
        {
            get;
            set;
        }
    
        public virtual int FeatureID
        {
            get { return _featureID; }
            set
            {
                if (_featureID != value)
                {
                    if (Feature != null && Feature.ID != value)
                    {
                        Feature = null;
                    }
                    _featureID = value;
                }
            }
        }
        private int _featureID;
    
        public virtual int DataTypeID
        {
            get { return _dataTypeID; }
            set
            {
                if (_dataTypeID != value)
                {
                    if (Attribute_DataType != null && Attribute_DataType.ID != value)
                    {
                        Attribute_DataType = null;
                    }
                    _dataTypeID = value;
                }
            }
        }
        private int _dataTypeID;
    
        public virtual string Name
        {
            get;
            set;
        }
    
        public virtual string Description
        {
            get;
            set;
        }
    
        public virtual int AttributeTypeID
        {
            get { return _attributeTypeID; }
            set
            {
                if (_attributeTypeID != value)
                {
                    if (Attribute_Type != null && Attribute_Type.ID != value)
                    {
                        Attribute_Type = null;
                    }
                    _attributeTypeID = value;
                }
            }
        }
        private int _attributeTypeID;

        #endregion
        #region Navigation Properties
    
        public virtual Attribute_DataType Attribute_DataType
        {
            get { return _attribute_DataType; }
            set
            {
                if (!ReferenceEquals(_attribute_DataType, value))
                {
                    var previousValue = _attribute_DataType;
                    _attribute_DataType = value;
                    FixupAttribute_DataType(previousValue);
                }
            }
        }
        private Attribute_DataType _attribute_DataType;
    
        public virtual Feature Feature
        {
            get { return _feature; }
            set
            {
                if (!ReferenceEquals(_feature, value))
                {
                    var previousValue = _feature;
                    _feature = value;
                    FixupFeature(previousValue);
                }
            }
        }
        private Feature _feature;
    
        public virtual Attribute_Type Attribute_Type
        {
            get { return _attribute_Type; }
            set
            {
                if (!ReferenceEquals(_attribute_Type, value))
                {
                    var previousValue = _attribute_Type;
                    _attribute_Type = value;
                    FixupAttribute_Type(previousValue);
                }
            }
        }
        private Attribute_Type _attribute_Type;

        #endregion
        #region Association Fixup
    
        private void FixupAttribute_DataType(Attribute_DataType previousValue)
        {
            if (previousValue != null && previousValue.Attributes.Contains(this))
            {
                previousValue.Attributes.Remove(this);
            }
    
            if (Attribute_DataType != null)
            {
                if (!Attribute_DataType.Attributes.Contains(this))
                {
                    Attribute_DataType.Attributes.Add(this);
                }
                if (DataTypeID != Attribute_DataType.ID)
                {
                    DataTypeID = Attribute_DataType.ID;
                }
            }
        }
    
        private void FixupFeature(Feature previousValue)
        {
            if (previousValue != null && previousValue.Attributes.Contains(this))
            {
                previousValue.Attributes.Remove(this);
            }
    
            if (Feature != null)
            {
                if (!Feature.Attributes.Contains(this))
                {
                    Feature.Attributes.Add(this);
                }
                if (FeatureID != Feature.ID)
                {
                    FeatureID = Feature.ID;
                }
            }
        }
    
        private void FixupAttribute_Type(Attribute_Type previousValue)
        {
            if (previousValue != null && previousValue.Attributes.Contains(this))
            {
                previousValue.Attributes.Remove(this);
            }
    
            if (Attribute_Type != null)
            {
                if (!Attribute_Type.Attributes.Contains(this))
                {
                    Attribute_Type.Attributes.Add(this);
                }
                if (AttributeTypeID != Attribute_Type.ID)
                {
                    AttributeTypeID = Attribute_Type.ID;
                }
            }
        }

        #endregion
    }
}
